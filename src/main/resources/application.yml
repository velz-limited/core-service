server:
  port: 8080
  time_zone: UTC
  shutdown: graceful
  tomcat:
    max-swallow-size: ${spring.servlet.multipart.max-file-size}

spring:
  lifecycle:
    timeout-per-shutdown-phase: 60s
  task:
    execution:
      shutdown:
        await-termination: true
        await-termination-period: ${spring.lifecycle.timeout-per-shutdown-phase}
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: ${spring.servlet.multipart.max-file-size}
  datasource:
    driver-class-name: org.postgresql.Driver
    url: "jdbc:postgresql://localhost:5432/core"
    username: "postgres"
    password: "postgres"
  liquibase:
    enabled: true
    change-log: classpath:/db/main-changelog.yml
  jpa:
    properties:
      hibernate:
        jdbc:
          time_zone: ${server.time_zone}
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ""
            client-secret: ""
          facebook:
            client-id: ""
            client-secret: ""
          # TODO J: Add Apple as OAuth2 provider.

springdoc:
  swagger-ui:
    enabled: false

app:
  cors:
    allow_all_origins: false
    allow_origins:
      - ""
    # Required to retrieve cookies, authorization headers, or TLS client certificates from cross-origin requests.
    allow_credentials: true
    max_age: 10m
  cookies:
    # Cookies domain storage level. 0 = same as request. 1 = main domain name, 2 = first subdomain, etc.
    domain_dot_level: 1
    # Secure will be forced to true if same site is none.
    secure: true
    same_site: strict
  jwt:
    issuer: velz-core
    rsa_private_key: ""
    rsa_public_key: ""
    access_token:
      # Recommended to keep this short (<10m).
      expires: 5m
      transport:
        cookies: false
        body: true
    refresh_token:
      expires: 8760h
      transport:
        # Required to refresh access tokens.
        cookies: true
        # Enabling will make token vulnerable to hijacking. Use cookies (with httpOnly) instead.
        body: false
  oauth2:
    authorized-redirect-uris: # TODO J: Update OAuth2 authorized redirect URIs.
      - http://localhost:3000/oauth2/redirect
      - iosapp://oauth2/redirect
      - androidapp://oauth2/redirect
